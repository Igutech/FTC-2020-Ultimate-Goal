package org.igutech.auto;

public enum State {
    PREPARE_TO_SHOOT,
    SHOOTING_PRELOAD_RINGS,
    MOVE_TO_DROP_FIRST_WOBBLE_GOAL,
    DROP_FIRST_WOBBLE_GOAL,
    MOVE_TO_TO_RING_STACK,
    INTAKE_RING_STACK,
    MOVE_TO_GRAB_SECOND_GOAL,
    MOVE_TO_GRAB_SECOND_GOAL_CONTINUED,
    MOVE_TO_GRAB_SECOND_GOAL_CONTINUED2,
    GRAB_SECOND_WOBBLE_GOAL,
    MOVE_TO_SHOOT_RING_STACK,
    SHOOT_RING_STACK,
    MOVE_TO_DROP_SECOND_WOBBLE_GOAL,
    DROP_SECOND_WOBBLE_GOAL,
    PARK,
    OFF;


    static {
        PREPARE_TO_SHOOT.nextState = SHOOTING_PRELOAD_RINGS;

        SHOOTING_PRELOAD_RINGS.nextState = MOVE_TO_DROP_FIRST_WOBBLE_GOAL;

        MOVE_TO_DROP_FIRST_WOBBLE_GOAL.nextState = DROP_FIRST_WOBBLE_GOAL;

       DROP_FIRST_WOBBLE_GOAL.nextState = MOVE_TO_TO_RING_STACK;

        MOVE_TO_TO_RING_STACK.nextState = INTAKE_RING_STACK;

        INTAKE_RING_STACK.nextState = MOVE_TO_GRAB_SECOND_GOAL;

        MOVE_TO_GRAB_SECOND_GOAL.nextState = MOVE_TO_GRAB_SECOND_GOAL_CONTINUED;

        MOVE_TO_GRAB_SECOND_GOAL_CONTINUED.nextState = MOVE_TO_GRAB_SECOND_GOAL_CONTINUED2;
        MOVE_TO_GRAB_SECOND_GOAL_CONTINUED2.nextState = GRAB_SECOND_WOBBLE_GOAL;

        GRAB_SECOND_WOBBLE_GOAL.nextState = MOVE_TO_SHOOT_RING_STACK;

        MOVE_TO_SHOOT_RING_STACK.nextState = SHOOT_RING_STACK;
        SHOOT_RING_STACK.nextState = MOVE_TO_DROP_SECOND_WOBBLE_GOAL;
        MOVE_TO_DROP_SECOND_WOBBLE_GOAL.nextState = DROP_SECOND_WOBBLE_GOAL;
        DROP_SECOND_WOBBLE_GOAL.nextState=PARK;
        PARK.nextState=OFF;
        OFF.nextState=OFF;
    }

    private State nextState;

    public State getNextState() {
        if (this.nextState == null) return this;
        return this.nextState;
    }
}
